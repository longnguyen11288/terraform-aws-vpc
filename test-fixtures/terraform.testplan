Refreshing Terraform state prior to plan...


The Terraform execution plan has been generated and is shown below.
Resources are shown in alphabetical order for quick scanning. Green resources
will be created (or destroyed and then created if an existing resource
exists), yellow resources are being changed in-place, and red resources
will be destroyed.

Note: You didn't specify an "-out" parameter to save this plan, so when
"apply" is called, Terraform can't guarantee this is what will execute.

[32m+ aws_eip.nat
[0m    allocation_id:  "" => "<computed>"
    association_id: "" => "<computed>"
    domain:         "" => "<computed>"
    instance:       "" => "${aws_instance.nat.id}"
    private_ip:     "" => "<computed>"
    public_ip:      "" => "<computed>"
    vpc:            "" => "1"
[0m
[0m[32m+ aws_instance.nat
[0m    ami:                         "" => "ami-8b6912bb"
    associate_public_ip_address: "" => "1"
    availability_zone:           "" => "<computed>"
    ebs_block_device.#:          "" => "<computed>"
    ephemeral_block_device.#:    "" => "<computed>"
    instance_type:               "" => "t2.small"
    key_name:                    "" => "bosh"
    private_dns:                 "" => "<computed>"
    private_ip:                  "" => "<computed>"
    public_dns:                  "" => "<computed>"
    public_ip:                   "" => "<computed>"
    root_block_device.#:         "" => "<computed>"
    security_groups.#:           "" => "<computed>"
    source_dest_check:           "" => "0"
    subnet_id:                   "" => "${aws_subnet.bastion.id}"
    tags.#:                      "" => "1"
    tags.Name:                   "" => "nat"
    tenancy:                     "" => "<computed>"
[0m
[0m[32m+ aws_internet_gateway.default
[0m    vpc_id: "" => "${aws_vpc.default.id}"
[0m
[0m[32m+ aws_route_table.private
[0m    route.#:                                     "" => "1"
    route.~3508085667.cidr_block:                "" => "0.0.0.0/0"
    route.~3508085667.gateway_id:                "" => ""
    route.~3508085667.instance_id:               "" => "${aws_instance.nat.id}"
    route.~3508085667.vpc_peering_connection_id: "" => ""
    vpc_id:                                      "" => "${aws_vpc.default.id}"
[0m
[0m[32m+ aws_route_table.public
[0m    route.#:                                     "" => "1"
    route.~1312964942.cidr_block:                "" => "0.0.0.0/0"
    route.~1312964942.gateway_id:                "" => "${aws_internet_gateway.default.id}"
    route.~1312964942.instance_id:               "" => ""
    route.~1312964942.vpc_peering_connection_id: "" => ""
    vpc_id:                                      "" => "${aws_vpc.default.id}"
[0m
[0m[32m+ aws_route_table_association.bastion-public
[0m    route_table_id: "" => "${aws_route_table.public.id}"
    subnet_id:      "" => "${aws_subnet.bastion.id}"
[0m
[0m[32m+ aws_route_table_association.microbosh-private
[0m    route_table_id: "" => "${aws_route_table.private.id}"
    subnet_id:      "" => "${aws_subnet.microbosh.id}"
[0m
[0m[32m+ aws_security_group.bastion
[0m    description:                          "" => "Allow SSH traffic from the internet"
    egress.#:                             "" => "<computed>"
    ingress.#:                            "" => "4"
    ingress.1799340084.cidr_blocks.#:     "" => "1"
    ingress.1799340084.cidr_blocks.0:     "" => "0.0.0.0/0"
    ingress.1799340084.from_port:         "" => "-1"
    ingress.1799340084.protocol:          "" => "icmp"
    ingress.1799340084.security_groups.#: "" => "0"
    ingress.1799340084.self:              "" => "0"
    ingress.1799340084.to_port:           "" => "-1"
    ingress.2541437006.cidr_blocks.#:     "" => "1"
    ingress.2541437006.cidr_blocks.0:     "" => "0.0.0.0/0"
    ingress.2541437006.from_port:         "" => "22"
    ingress.2541437006.protocol:          "" => "tcp"
    ingress.2541437006.security_groups.#: "" => "0"
    ingress.2541437006.self:              "" => "0"
    ingress.2541437006.to_port:           "" => "22"
    ingress.3472572478.cidr_blocks.#:     "" => "0"
    ingress.3472572478.from_port:         "" => "0"
    ingress.3472572478.protocol:          "" => "udp"
    ingress.3472572478.security_groups.#: "" => "0"
    ingress.3472572478.self:              "" => "1"
    ingress.3472572478.to_port:           "" => "65535"
    ingress.3544538468.cidr_blocks.#:     "" => "0"
    ingress.3544538468.from_port:         "" => "0"
    ingress.3544538468.protocol:          "" => "tcp"
    ingress.3544538468.security_groups.#: "" => "0"
    ingress.3544538468.self:              "" => "1"
    ingress.3544538468.to_port:           "" => "65535"
    name:                                 "" => "bastion"
    owner_id:                             "" => "<computed>"
    tags.#:                               "" => "1"
    tags.Name:                            "" => "cf-vpc-bastion"
    vpc_id:                               "" => "${aws_vpc.default.id}"
[0m
[0m[32m+ aws_security_group.nat
[0m    description:                          "" => "Allow services from the private subnet through NAT"
    egress.#:                             "" => "<computed>"
    ingress.#:                            "" => "7"
    ingress.1431762526.cidr_blocks.#:     "" => "1"
    ingress.1431762526.cidr_blocks.0:     "" => "0.0.0.0/0"
    ingress.1431762526.from_port:         "" => "9418"
    ingress.1431762526.protocol:          "" => "tcp"
    ingress.1431762526.security_groups.#: "" => "0"
    ingress.1431762526.self:              "" => "0"
    ingress.1431762526.to_port:           "" => "9418"
    ingress.175581810.cidr_blocks.#:      "" => "1"
    ingress.175581810.cidr_blocks.0:      "" => "0.0.0.0/0"
    ingress.175581810.from_port:          "" => "123"
    ingress.175581810.protocol:           "" => "udp"
    ingress.175581810.security_groups.#:  "" => "0"
    ingress.175581810.self:               "" => "0"
    ingress.175581810.to_port:            "" => "123"
    ingress.1799340084.cidr_blocks.#:     "" => "1"
    ingress.1799340084.cidr_blocks.0:     "" => "0.0.0.0/0"
    ingress.1799340084.from_port:         "" => "-1"
    ingress.1799340084.protocol:          "" => "icmp"
    ingress.1799340084.security_groups.#: "" => "0"
    ingress.1799340084.self:              "" => "0"
    ingress.1799340084.to_port:           "" => "-1"
    ingress.2214680975.cidr_blocks.#:     "" => "1"
    ingress.2214680975.cidr_blocks.0:     "" => "0.0.0.0/0"
    ingress.2214680975.from_port:         "" => "80"
    ingress.2214680975.protocol:          "" => "tcp"
    ingress.2214680975.security_groups.#: "" => "0"
    ingress.2214680975.self:              "" => "0"
    ingress.2214680975.to_port:           "" => "80"
    ingress.2541437006.cidr_blocks.#:     "" => "1"
    ingress.2541437006.cidr_blocks.0:     "" => "0.0.0.0/0"
    ingress.2541437006.from_port:         "" => "22"
    ingress.2541437006.protocol:          "" => "tcp"
    ingress.2541437006.security_groups.#: "" => "0"
    ingress.2541437006.self:              "" => "0"
    ingress.2541437006.to_port:           "" => "22"
    ingress.2617001939.cidr_blocks.#:     "" => "1"
    ingress.2617001939.cidr_blocks.0:     "" => "0.0.0.0/0"
    ingress.2617001939.from_port:         "" => "443"
    ingress.2617001939.protocol:          "" => "tcp"
    ingress.2617001939.security_groups.#: "" => "0"
    ingress.2617001939.self:              "" => "0"
    ingress.2617001939.to_port:           "" => "443"
    ingress.3214867474.cidr_blocks.#:     "" => "1"
    ingress.3214867474.cidr_blocks.0:     "" => "0.0.0.0/0"
    ingress.3214867474.from_port:         "" => "4443"
    ingress.3214867474.protocol:          "" => "tcp"
    ingress.3214867474.security_groups.#: "" => "0"
    ingress.3214867474.self:              "" => "0"
    ingress.3214867474.to_port:           "" => "4443"
    name:                                 "" => "nat"
    owner_id:                             "" => "<computed>"
    tags.#:                               "" => "1"
    tags.Name:                            "" => "cf-vpc-nat"
    vpc_id:                               "" => "${aws_vpc.default.id}"
[0m
[0m[32m+ aws_subnet.bastion
[0m    availability_zone:       "" => "<computed>"
    cidr_block:              "" => "10.10.0.0/24"
    map_public_ip_on_launch: "" => "<computed>"
    tags.#:                  "" => "1"
    tags.Name:               "" => "cf-vpc-bastion"
    vpc_id:                  "" => "${aws_vpc.default.id}"
[0m
[0m[32m+ aws_subnet.microbosh
[0m    availability_zone:       "" => "${aws_subnet.bastion.availability_zone}"
    cidr_block:              "" => "10.10.1.0/24"
    map_public_ip_on_launch: "" => "<computed>"
    tags.#:                  "" => "1"
    tags.Name:               "" => "cf-vpc-microbosh"
    vpc_id:                  "" => "${aws_vpc.default.id}"
[0m
[0m[32m+ aws_vpc.default
[0m    cidr_block:                "" => "10.10.0.0/16"
    default_network_acl_id:    "" => "<computed>"
    default_security_group_id: "" => "<computed>"
    enable_dns_hostnames:      "" => "1"
    enable_dns_support:        "" => "<computed>"
    main_route_table_id:       "" => "<computed>"
    tags.#:                    "" => "1"
    tags.Name:                 "" => "cf-vpc"
[0m
[0m
